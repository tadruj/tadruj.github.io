# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config| # 2 is Vagrantfile version
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/trusty64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "www", "/var/www", group: "www-data", owner: "www-data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  config.vm.provision "shell", inline: <<-SHELL
    echo "====================================="
    # apt-get
    sudo apt-get -y install software-properties-common
    sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0x5a16e7281be7a449
    sudo add-apt-repository 'deb http://dl.hhvm.com/ubuntu trusty main'
    sudo apt-get update
    sudo apt-get -y install apt-show-versions

    # # Find out the apt package version to hardcode it
    # apt-show-versions hhvm
    # # hhvm:amd64/trusty 3.5.0~trusty uptodate
    # version we use is: hhvm=3.5.0~trusty

    # Apache
    sudo apt-get install -y apache2
    sudo service apache2 restart
    # sudo update-rc.d apache2 defaults

    # PHP
    sudo apt-get install -y php5
    sudo apt-get install -y php5-mysql

    # www root
    sudo mkdir -p /var/www

      # Wordpress
      # wget -q http://wordpress.org/wordpress-4.1.tar.gz
      # tar xvfz wordpress-4.1.tar.gz
      # rm wordpress-4.1.tar.gz
      # sudo mv wordpress /var/www/wordpress

      # Wordpress from Bitbucket - deployment keys have to be set
      sudo apt-get -y install git
      sudo mkdir -p /var/www/.ssh
      sudo cp /vagrant/ssh/id_rsa* /var/www/.ssh
      cd /var/www
      sudo -H -u www-data git clone git@bitbucket.org:gnowbe/wordpress.git wordpress
      sudo chown --recursive www-data.www-data wordpress
      cd /var/www/wordpress
      sudo -H -u www-data git config --global user.email "dev@vagrant"
      sudo -H -u www-data git config --global user.name "Developer on Vagrant"
      sudo -H -u www-data git config --global push.default simple
      sudo -H -u www-data git checkout development
      sudo -H -u www-data git pull

    # development environment variables
    sudo cp /vagrant/etc/apache2/envvars /etc/apache2/envvars

    sudo chown www-data.www-data /var/www --recursive
    sudo cp -f /vagrant/etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf
    sudo service apache2 restart

    # Diagnostics and utilities
    sudo apt-get install -y lynx
    sudo apt-get install -y mysql-client
  SHELL

  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # config.vm.provider :virtualbox do |vb|
  #   vb.name = "HipHop VM"
  #   vb.customize ["modifyvm", :id, "--memory", "2048"]
  #   vb.customize ["modifyvm", :id, "--cpus", "4"]
  #   vb.customize ["modifyvm", :id, "--hwvirtex", "on"]
  #   vb.customize ["modifyvm", :id, "--nestedpaging", "on"]
  # end  
end
